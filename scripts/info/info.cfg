//Info menu + info command + infoall command + some custom colors by Infinity

// geoip script v. 4.2 by grenadier - date: 28.10.2018
	// Modified for geodb by >gtrx<  2022-01-22
// execute database of IPs
// this product includes GeoLite2 data created by MaxMind, available from http:// www.maxmind.com
// teamkillers menu inspired by Thrawn

persistidents 0

exec config/scripts/info/ipnum.txt
exec config/scripts/info/abbr.txt
exec config/scripts/info/countrylist.txt

bind Q [show_player_info_menu]

alias info_to_menu [
	if (!= (isclient $arg1) 1) [echo "info: this client number" $arg1 "isn't valid"] [
		if (!= (player $arg1 ip) (player1 ip)) [

			tmp_first_byte = (at (strreplace (player $arg1 ip) "." " ") 0)
			tmp_second_byte = (at (strreplace (player $arg1 ip) "." " ") 1)
			tmp_third_byte = (at (strreplace (player $arg1 ip) "." " ") 2)
			tmp_ipnum = ( + ( + ( * 65536 (tmp_first_byte) ) ( * 256 (tmp_second_byte) ) ) (tmp_third_byte) )

			// take IP of server for players with private IP
			if (|| (|| (&& (>= (tmp_ipnum) 655360) (<= (tmp_ipnum) 720895)) (&& (>= (tmp_ipnum) 11276288) (<= (tmp_ipnum) 11280383))) (&& (>= (tmp_ipnum) 12625920) (<= (tmp_ipnum) 12626175))) [              
				tmp_first_byte = (at (strreplace (curserver 1) "." " ") 0)
				tmp_second_byte = (at (strreplace (curserver 1) "." " ") 1)
				tmp_third_byte = (at (strreplace (curserver 1) "." " ") 2)
				tmp_ipnum = ( + ( + ( * 65536 (tmp_first_byte) ) ( * 256 (tmp_second_byte) ) ) (tmp_third_byte) )
			]

			i = 0
			j = 0

			persistidents 0
			alias tmp_geoip_ipnum [ getalias (concatword tmp_geoip_ipnum_ $tmp_first_byte) ]
			alias tmp_geoip_abbr [ getalias (concatword tmp_geoip_abbr_ $tmp_first_byte) ]
			persistidents 1

			alias tmp_length [ listlen (tmp_geoip_ipnum) ]
			alias tmp_search [ at (tmp_geoip_ipnum) (- $tmp_IP_position 1) ] // -1, because CubeScript starts from 0
			alias tmp_search_plus [ at (tmp_geoip_ipnum) $tmp_IP_position ]      

			// binary search algorithm
			while [&& (>= $i 0) (<= $j 19)] [
				++ j
				tmp_IP_position = (div (+ $i (tmp_length)) 2)  
				if (&& (>= $tmp_ipnum (tmp_search_plus)) (!= (- $tmp_IP_position $i) -1) ) [ // find last country
					i = (+ $tmp_IP_position 1)
				] [
					if (< $tmp_ipnum (tmp_search))[
						tmp_length = (- $tmp_IP_position 1)        
					] [
						alias tmp_abbr (at (tmp_geoip_abbr) (- $tmp_IP_position 1)) // find country abbreviation                

						// each IP range has a country abbreviation associated with it, for example FR for France
						// some IP ranges belong to multiple countries, in this case the abbreviations are added together, e.g. FRRU = France or Russia

						// if in this IP range is only 1 country
						if (<= (strlen $tmp_abbr) 2) [
							tmp_player_country = (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist $tmp_abbr) 1) ) // find country name from abbreviation
						] [
							// 2 countries
							if (= (strlen $tmp_abbr) 4) [
								tmp_player_country = ( concatword (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 0 2)) 1)) " or " (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 2 2)) 1)) )
							] [
								// 3 countries
								if (<= (strlen $tmp_abbr) 6) [
									tmp_player_country = ( concatword (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 0 2)) 1)) " or " (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 2 2)) 1)) " or " (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 4 2)) 1)) )
								] [
									// more than 3
									tmp_player_country = (concatword "one of " (div (strlen $tmp_abbr) 2) " countries")
								]
							]
						]          
						break          
					]
				]
			]
			// end of binary search algorithm

			if (= $j 20) [tmp_player_country = "nowhere"]
			if (= $arg2 1) [tmp_player_ip = ""] [tmp_player_ip = (player $arg1 ip)]

			menuitem (concatword "\f0" $tmp_player_name_comp_old " " (concatword "\f1(" $arg1 ") ") "\f5is from \f3" $tmp_player_country " \f5(" $tmp_player_ip ") \f9Tks: \f2" (player $arg1 tks)) -1
		]
	]
]

alias show_player_info_menu [
	delmenu "Player Info"
  
  	newmenu "Player Info"

	loop i (curplayers) [
		if (&& (isclient $i) (!= $i (player1 cn))) [ info_to_menu $i $arg1 ]
	]

	showmenu "Player Info"
  
  	onrelease [closemenu "Player Info"; delmenu "Player Info";]
]

alias info [
	if (!= (isclient $arg1) 1) [echo "info: this client number" $arg1 "isn't valid"] [
		if (!= (player $arg1 ip) (player1 ip)) [

			tmp_first_byte = (at (strreplace (player $arg1 ip) "." " ") 0)
			tmp_second_byte = (at (strreplace (player $arg1 ip) "." " ") 1)
			tmp_third_byte = (at (strreplace (player $arg1 ip) "." " ") 2)
			tmp_ipnum = ( + ( + ( * 65536 (tmp_first_byte) ) ( * 256 (tmp_second_byte) ) ) (tmp_third_byte) )

			// take IP of server for players with private IP
			if (|| (|| (&& (>= (tmp_ipnum) 655360) (<= (tmp_ipnum) 720895)) (&& (>= (tmp_ipnum) 11276288) (<= (tmp_ipnum) 11280383))) (&& (>= (tmp_ipnum) 12625920) (<= (tmp_ipnum) 12626175))) [              
				tmp_first_byte = (at (strreplace (curserver 1) "." " ") 0)
				tmp_second_byte = (at (strreplace (curserver 1) "." " ") 1)
				tmp_third_byte = (at (strreplace (curserver 1) "." " ") 2)
				tmp_ipnum = ( + ( + ( * 65536 (tmp_first_byte) ) ( * 256 (tmp_second_byte) ) ) (tmp_third_byte) )
			]

			i = 0
			j = 0

			persistidents 0
			alias tmp_geoip_ipnum [ getalias (concatword tmp_geoip_ipnum_ $tmp_first_byte) ]
			alias tmp_geoip_abbr [ getalias (concatword tmp_geoip_abbr_ $tmp_first_byte) ]
			persistidents 1

			alias tmp_length [ listlen (tmp_geoip_ipnum) ]
			alias tmp_search [ at (tmp_geoip_ipnum) (- $tmp_IP_position 1) ] // -1, because CubeScript starts from 0
			alias tmp_search_plus [ at (tmp_geoip_ipnum) $tmp_IP_position ]      

			// binary search algorithm
			while [&& (>= $i 0) (<= $j 19)] [
				++ j
				tmp_IP_position = (div (+ $i (tmp_length)) 2)  
				if (&& (>= $tmp_ipnum (tmp_search_plus)) (!= (- $tmp_IP_position $i) -1) ) [ // find last country
					i = (+ $tmp_IP_position 1)
				] [
					if (< $tmp_ipnum (tmp_search))[
						tmp_length = (- $tmp_IP_position 1)        
					] [
						alias tmp_abbr (at (tmp_geoip_abbr) (- $tmp_IP_position 1)) // find country abbreviation                

						// each IP range has a country abbreviation associated with it, for example FR for France
						// some IP ranges belong to multiple countries, in this case the abbreviations are added together, e.g. FRRU = France or Russia

						// if in this IP range is only 1 country
						if (<= (strlen $tmp_abbr) 2) [
							tmp_player_country = (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist $tmp_abbr) 1) ) // find country name from abbreviation
						] [
							// 2 countries
							if (= (strlen $tmp_abbr) 4) [
								tmp_player_country = ( concatword (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 0 2)) 1)) " or " (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 2 2)) 1)) )
							] [
								// 3 countries
								if (<= (strlen $tmp_abbr) 6) [
									tmp_player_country = ( concatword (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 0 2)) 1)) " or " (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 2 2)) 1)) " or " (at $tmp_geoip_countrylist (+ (findlist $tmp_geoip_countrylist (substr $tmp_abbr 4 2)) 1)) )
								] [
									// more than 3
									tmp_player_country = (concatword "one of " (div (strlen $tmp_abbr) 2) " countries")
								]
							]
						]          
						break          
					]
				]
			]
			// end of binary search algorithm

			if (= $j 20) [tmp_player_country = "nowhere"]
			if (= $arg2 1) [tmp_player_ip = ""] [tmp_player_ip = (player $arg1 ip)]

			echo (concatword "\f0" $tmp_player_name_comp_old " " (concatword "\f1(" $arg1 ") ") "\f5is from \f3" $tmp_player_country " \f5(" $tmp_player_ip ") \f9Tks: \f2" (player $arg1 tks))
		]
	]
]

alias infoall [
	loop i (curplayers) [
		if (&& (isclient $i) (!= $i (player1 cn))) [ info $i $arg1 ]
	]
]

// Execute /info cn when someone connects
// Execute /infoall when you connect to the server
//check2init autoinfo 1
//alias onConnect [ if (= $arg1 -1) [ sbc_ip = (curserver 1); sbc_port = (curserver 3) ] 
//  if (&& (= (watchingdemo) 0) (&& (= $autoinfo 1) (= $arg1 -1))) [ alias mapstartonce [infoall 1] ] 
//  if (&& (= (watchingdemo) 0) (&& (= $autoinfo 1) (> $arg1 -1))) [ if (> (- (millis) $gametimestart) 200) [ tmp_cn_for_geoip = $arg1; sleep 1 [geoip $tmp_cn_for_geoip 1]]]
//]

check2init autoinfo 1
alias onConnect [ if (= $arg1 -1) [ sbc_ip = (curserver 1); sbc_port = (curserver 3) ] 
  if (&& (= (watchingdemo) 0) (&& (= $autoinfo 1) (= $arg1 -1))) [ alias mapstartonce [infoall] ] 
  if (&& (= (watchingdemo) 0) (&& (= $autoinfo 1) (> $arg1 -1))) [ if (> (- (millis) $gametimestart) 200) [ tmp_cn_for_geoip = $arg1; sleep 1 [info $tmp_cn_for_geoip]]]
]


persistidents 1
